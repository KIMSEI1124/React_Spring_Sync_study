{"ast":null,"code":"var _jsxFileName = \"/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Board/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as S from \"./index.styled\";\nimport { API_PATH, BROWSER_PATH } from \"../../constants/path\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Boards() {\n  _s();\n  const [data, setData] = useState({});\n  const [image, setImage] = useState({});\n  const getImage = data => {\n    const convertedCode = Buffer.from(data.image.img, \"base64\");\n    setImage(`data:image/;base64,${convertedCode}`);\n  };\n  const params = useParams();\n  const requestBoards = useCallback(async () => {\n    await axios.get(`${API_PATH.BOARD}/${params.id}`).then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [params]);\n  useEffect(() => {\n    requestBoards();\n  }, [requestBoards]);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id : \", data.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"title : \", data.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"content : \", data.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: BROWSER_PATH.BASE,\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: BROWSER_PATH.BOARDS,\n        children: \"BOARDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `${BROWSER_PATH.UPDATE_BOARD}/${params.id}`,\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Boards, \"lBLVpsrzk2R3f+EpZGKkdBCSurE=\", false, function () {\n  return [useParams];\n});\n_c = Boards;\nexport default Boards;\nvar _c;\n$RefreshReg$(_c, \"Boards\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","axios","S","API_PATH","BROWSER_PATH","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Boards","_s","data","setData","image","setImage","getImage","convertedCode","Buffer","from","img","params","requestBoards","get","BOARD","id","then","response","catch","error","console","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","to","BASE","BOARDS","UPDATE_BOARD","_c","$RefreshReg$"],"sources":["/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Board/index.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport * as S from \"./index.styled\";\nimport { API_PATH, BROWSER_PATH } from \"../../constants/path\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction Boards() {\n  const [data, setData] = useState({});\n  const [image, setImage] = useState({});\n\n  const getImage = (data) => {\n    const convertedCode = Buffer.from(data.image.img, \"base64\");\n    setImage(`data:image/;base64,${convertedCode}`);\n  };\n  const params = useParams();\n\n  const requestBoards = useCallback(async () => {\n    await axios\n      .get(`${API_PATH.BOARD}/${params.id}`)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [params]);\n\n  useEffect(() => {\n    requestBoards();\n  }, [requestBoards]);\n\n  return (\n    <S.Container>\n      {data && (\n        <>\n          <h1>Board</h1>\n          <p>id : {data.id}</p>\n          <p>title : {data.title}</p>\n          <p>content : {data.content}</p>\n        </>\n      )}\n      <button>\n        <Link to={BROWSER_PATH.BASE}>HOME</Link>\n      </button>\n      <button>\n        <Link to={BROWSER_PATH.BOARDS}>BOARDS</Link>\n      </button>\n      <button>\n        <Link to={`${BROWSER_PATH.UPDATE_BOARD}/${params.id}`}>수정</Link>\n      </button>\n    </S.Container>\n  );\n}\nexport default Boards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}