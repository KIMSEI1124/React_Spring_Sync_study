{"ast":null,"code":"var _jsxFileName = \"/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/SaveBoard/index.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { API_PATH, BROWSER_PATH } from \"../../constants/path\";\nimport * as S from \"./index.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const getTitle = e => {\n    setTitle(e.target.value);\n  };\n  const getContent = e => {\n    setContent(e.target.value);\n  };\n  const getImage = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  };\n  const requestAddBoard = async (title, content) => {\n    await axios.post(API_PATH.BOARD, {\n      title: title,\n      content: content\n    }).then(() => {\n      navigate(\"/\");\n    }).catch(error => {\n      console.error(error);\n      alert(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: getTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"content\",\n      onChange: getContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      id: \"file\",\n      accept: \".jpg, .jpeg, .png\",\n      onChange: getImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => requestAddBoard(title, content),\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: BROWSER_PATH.BASE,\n        children: \"HOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"Q1k6s0mYSQ+6St5yKahYB+E78AM=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["axios","React","useState","Link","useNavigate","API_PATH","BROWSER_PATH","S","jsxDEV","_jsxDEV","Board","_s","navigate","title","setTitle","content","setContent","image","setImage","getTitle","e","target","value","getContent","getImage","file","files","reader","FileReader","onload","_handleReaderLoaded","bind","readAsBinaryString","requestAddBoard","post","BOARD","then","catch","error","console","alert","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","name","id","accept","onClick","to","BASE","_c","$RefreshReg$"],"sources":["/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/SaveBoard/index.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { API_PATH, BROWSER_PATH } from \"../../constants/path\";\n\nimport * as S from \"./index.styled\";\n\nfunction Board() {\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const getTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const getContent = (e) => {\n    setContent(e.target.value);\n  };\n\n  const getImage = (e) => {\n    const file = e.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  };\n\n  const requestAddBoard = async (title, content) => {\n    await axios\n      .post(API_PATH.BOARD, {\n        title: title,\n        content: content,\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        console.error(error);\n        alert(error);\n      });\n  };\n\n  return (\n    <S.Container>\n      <h1>Board</h1>\n      <input type={\"text\"} placeholder={\"title\"} onChange={getTitle}></input>\n      <input type={\"text\"} placeholder={\"content\"} onChange={getContent}></input>\n      <input type={\"file\"} name={\"image\"} id={\"file\"} accept={\".jpg, .jpeg, .png\"} onChange={getImage} />\n      <button type={\"submit\"} onClick={() => requestAddBoard(title, content)}>\n        전송\n      </button>\n      <button>\n        <Link to={BROWSER_PATH.BASE}>HOME</Link>\n      </button>\n    </S.Container>\n  );\n}\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}