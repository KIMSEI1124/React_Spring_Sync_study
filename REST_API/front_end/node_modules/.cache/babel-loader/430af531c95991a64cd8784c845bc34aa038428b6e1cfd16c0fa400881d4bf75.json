{"ast":null,"code":"var _jsxFileName = \"/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Boards/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as S from \"./index.styled\";\nimport { API_PATH } from \"../../constants/path\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Boards() {\n  _s();\n  const [data, setData] = useState({});\n  const requestBoards = async () => {\n    await axios.get(API_PATH.BOARDS).then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  console.log(data);\n  useEffect(() => {\n    requestBoards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(Boards, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = Boards;\nexport default Boards;\nvar _c;\n$RefreshReg$(_c, \"Boards\");","map":{"version":3,"names":["React","useEffect","useState","axios","S","API_PATH","jsxDEV","_jsxDEV","Boards","_s","data","setData","requestBoards","get","BOARDS","then","response","catch","error","console","log","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Boards/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport * as S from \"./index.styled\";\nimport { API_PATH } from \"../../constants/path\";\n\nfunction Boards() {\n  const [data, setData] = useState({});\n\n  const requestBoards = async () => {\n    await axios\n      .get(API_PATH.BOARDS)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  console.log(data);\n\n  useEffect(() => {\n    requestBoards();\n  }, []);\n\n  return <S.Container>{data}</S.Container>;\n}\nexport default Boards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,CAAC,MAAM,gBAAgB;AACnC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMT,KAAK,CACRU,GAAG,CAACR,QAAQ,CAACS,MAAM,CAAC,CACpBC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EAEjBT,SAAS,CAAC,MAAM;IACdW,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA,CAACH,CAAC,CAACiB,SAAS;IAAAC,QAAA,EAAEZ;EAAI;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAe;AAC1C;AAACjB,EAAA,CArBQD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAsBf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}