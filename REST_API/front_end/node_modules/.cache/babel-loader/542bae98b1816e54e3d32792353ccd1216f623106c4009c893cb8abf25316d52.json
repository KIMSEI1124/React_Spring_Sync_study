{"ast":null,"code":"var _jsxFileName = \"/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Board/index.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_PATH } from \"../../constants/path\";\nimport * as S from \"./index.styled\";\n\n// https://jsonplaceholder.typicode.com/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n  const getTitle = e => {\n    setTitle(e.target.value);\n  };\n  const getContent = e => {\n    setContent(e.target.value);\n  };\n  const requestAddBoard = (title, content) => {\n    axios.post(API_PATH.POST, {\n      title: title,\n      content: content\n    }).then(() => {\n      navigate(\"/\");\n    }).catch(error => {\n      console.error(error);\n    });\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: getTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"content\",\n      onChange: getContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => requestAddBoard(title, content),\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"TS8Yhg7i2t1mYakgzxYRrBvJzSs=\", false, function () {\n  return [useNavigate];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["axios","React","useState","useNavigate","API_PATH","S","jsxDEV","_jsxDEV","Board","_s","title","setTitle","content","setContent","navigate","getTitle","e","target","value","getContent","requestAddBoard","post","POST","then","catch","error","console","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Board/index.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_PATH } from \"../../constants/path\";\n\nimport * as S from \"./index.styled\";\n\n// https://jsonplaceholder.typicode.com/\nfunction Board() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const getTitle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const getContent = (e) => {\n    setContent(e.target.value);\n  };\n\n  const requestAddBoard = (title, content) => {\n    axios\n      .post(API_PATH.POST, {\n        title: title,\n        content: content,\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  return (\n    <S.Container>\n      <h1>Board</h1>\n      <input type={\"text\"} placeholder={\"title\"} onChange={getTitle}></input>\n      <input type={\"text\"} placeholder={\"content\"} onChange={getContent}></input>\n      <button type={\"submit\"} onClick={() => requestAddBoard(title, content)}>\n        전송\n      </button>\n    </S.Container>\n  );\n}\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAE/C,OAAO,KAAKC,CAAC,MAAM,gBAAgB;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,QAAQ,GAAIC,CAAC,IAAK;IACtBL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAIH,CAAC,IAAK;IACxBH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAME,eAAe,GAAGA,CAACV,KAAK,EAAEE,OAAO,KAAK;IAC1CZ,KAAK,CACFqB,IAAI,CAACjB,QAAQ,CAACkB,IAAI,EAAE;MACnBZ,KAAK,EAAEA,KAAK;MACZE,OAAO,EAAEA;IACX,CAAC,CAAC,CACDW,IAAI,CAAC,MAAM;MACVT,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,CACDU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IACJd,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA,CAACF,CAAC,CAACsB,SAAS;IAAAC,QAAA,gBACVrB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdzB,OAAA;MAAO0B,IAAI,EAAE,MAAO;MAACC,WAAW,EAAE,OAAQ;MAACC,QAAQ,EAAEpB;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvEzB,OAAA;MAAO0B,IAAI,EAAE,MAAO;MAACC,WAAW,EAAE,SAAU;MAACC,QAAQ,EAAEhB;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3EzB,OAAA;MAAQ0B,IAAI,EAAE,QAAS;MAACG,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACV,KAAK,EAAEE,OAAO,CAAE;MAAAgB,QAAA,EAAC;IAExE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAElB;AAACvB,EAAA,CAxCQD,KAAK;EAAA,QAIKL,WAAW;AAAA;AAAAkC,EAAA,GAJrB7B,KAAK;AAyCd,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}