{"ast":null,"code":"var _jsxFileName = \"/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Boards/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as S from \"./index.styled\";\nimport { API_PATH } from \"../../constants/path\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Boards() {\n  _s();\n  const [data, setData] = useState({});\n  const requestBoards = async () => {\n    await axios.get(API_PATH.BOARDS).then(response => {\n      setData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    requestBoards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: data.map(board => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: board.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Boards, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = Boards;\nexport default Boards;\nvar _c;\n$RefreshReg$(_c, \"Boards\");","map":{"version":3,"names":["React","useEffect","useState","axios","S","API_PATH","jsxDEV","_jsxDEV","Fragment","_Fragment","Boards","_s","data","setData","requestBoards","get","BOARDS","then","response","catch","error","console","Container","children","map","board","title","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["/Users/jukim/Code/Study/Spring+React/REST_API/front_end/src/pages/Boards/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport * as S from \"./index.styled\";\nimport { API_PATH } from \"../../constants/path\";\n\nfunction Boards() {\n  const [data, setData] = useState({});\n\n  const requestBoards = async () => {\n    await axios\n      .get(API_PATH.BOARDS)\n      .then((response) => {\n        setData(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    requestBoards();\n  }, []);\n\n  return (\n    <S.Container>\n      {data.map((board) => {\n        return (\n          <>\n            <h1>{board.title}</h1>\n            <p>{board.content}</p>\n          </>\n        );\n      })}\n    </S.Container>\n  );\n}\nexport default Boards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,CAAC,MAAM,gBAAgB;AACnC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMX,KAAK,CACRY,GAAG,CAACV,QAAQ,CAACW,MAAM,CAAC,CACpBC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,OAAO,CAACK,QAAQ,CAACN,IAAI,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACda,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACH,CAAC,CAACkB,SAAS;IAAAC,QAAA,EACTX,IAAI,CAACY,GAAG,CAAEC,KAAK,IAAK;MACnB,oBACElB,OAAA,CAAAE,SAAA;QAAAc,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAKE,KAAK,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACtBvB,OAAA;UAAAgB,QAAA,EAAIE,KAAK,CAACM;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,gBACrB;IAEP,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAElB;AAACnB,EAAA,CA9BQD,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}